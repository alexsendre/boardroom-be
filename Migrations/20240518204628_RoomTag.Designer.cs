// <auto-generated />
using System;
using BoardRoom;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BoardRoom.Migrations
{
    [DbContext(typeof(BoardRoomDbContext))]
    [Migration("20240518204628_RoomTag")]
    partial class RoomTag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoardRoom.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://i.pcmag.com/imagery/reviews/05mQGIDQOTCx8qyj5vd3S8t-1.fit_lim.size_840x473.v1695825614.jpg",
                            Name = "Monitor",
                            Price = 159.99m,
                            RoomId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://images.stockx.com/images/FaZe-x-Murakami-Mousepad-Black.jpg?fit=fill&bg=FFFFFF&w=700&h=500&fm=webp&auto=compress&q=90&dpr=2&trim=color&updated_at=1637778655",
                            Name = "Deskpad",
                            Price = 19.99m,
                            RoomId = 2
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://m.media-amazon.com/images/I/81Y5x1jljBL._AC_UF1000,1000_QL80_.jpg",
                            Name = "Couch",
                            Price = 349.99m,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("BoardRoom.Models.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsLeasable")
                        .HasColumnType("boolean");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.ToTable("Listings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://i.pinimg.com/564x/59/fb/79/59fb7976ceae747a206a79a426093824.jpg",
                            IsLeasable = true,
                            Price = 39.99m,
                            Title = "Room 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://i.pinimg.com/564x/c5/f7/78/c5f7782a1e831c2d2f481404f39a3588.jpg",
                            IsLeasable = true,
                            Price = 49.99m,
                            Title = "Room 2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://i.pinimg.com/564x/70/28/82/702882477d62e948ae11f3f73cce3a66.jpg",
                            IsLeasable = false,
                            Price = 59.99m,
                            Title = "Room 3",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BoardRoom.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jordancarter@test.com",
                            FirstName = "Jordan",
                            LastName = "Carter",
                            PaymentTypeId = 1,
                            RoomId = 1,
                            Total = 30.00m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "postmalone@gmail.com",
                            FirstName = "Austin",
                            LastName = "Post",
                            PaymentTypeId = 2,
                            RoomId = 3,
                            Total = 489.38m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "jenjo@gmail.com",
                            FirstName = "Jen",
                            LastName = "Jones",
                            PaymentTypeId = 3,
                            RoomId = 2,
                            Total = 89.83m,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BoardRoom.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Debit/Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            Label = "PayPal"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Klarna"
                        });
                });

            modelBuilder.Entity("BoardRoom.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ListingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Gaming"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Minimalist"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Workspace"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Quirky"
                        });
                });

            modelBuilder.Entity("BoardRoom.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsHost")
                        .HasColumnType("boolean");

                    b.Property<int?>("ListingId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ListingId");

                    b.HasIndex("OrdersId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://cdns-images.dzcdn.net/images/artist/16cc4a271b96586a46c35d8182412e92/1900x1900-000000-80-0-0.jpg",
                            IsHost = false,
                            Uid = "uid1",
                            Username = "jordancarter"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BODg4N2I0NmEtNTIyMS00MzVjLThjYzgtODAwMzcwYThkMTVkXkEyXkFqcGdeQXVyMTI2Nzk3NzI4._V1_FMjpg_UX1000_.jpg",
                            IsHost = false,
                            Uid = "uid1",
                            Username = "testcase"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://imageio.forbes.com/specials-images/imageserve/1189837141/2019-American-Music-Awards---Red-Carpet/960x0.jpg?format=jpg&width=960",
                            IsHost = false,
                            Uid = "uid1",
                            Username = "fishtank"
                        });
                });

            modelBuilder.Entity("ItemListing", b =>
                {
                    b.Property<int>("ItemsId")
                        .HasColumnType("integer");

                    b.Property<int>("ListingsId")
                        .HasColumnType("integer");

                    b.HasKey("ItemsId", "ListingsId");

                    b.HasIndex("ListingsId");

                    b.ToTable("ItemListing");
                });

            modelBuilder.Entity("BoardRoom.Models.Listing", b =>
                {
                    b.HasOne("BoardRoom.Models.Orders", null)
                        .WithMany("Rooms")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("BoardRoom.Models.Tag", b =>
                {
                    b.HasOne("BoardRoom.Models.Listing", null)
                        .WithMany("Tags")
                        .HasForeignKey("ListingId");
                });

            modelBuilder.Entity("BoardRoom.Models.User", b =>
                {
                    b.HasOne("BoardRoom.Models.Listing", null)
                        .WithMany("Users")
                        .HasForeignKey("ListingId");

                    b.HasOne("BoardRoom.Models.Orders", null)
                        .WithMany("Users")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("ItemListing", b =>
                {
                    b.HasOne("BoardRoom.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoardRoom.Models.Listing", null)
                        .WithMany()
                        .HasForeignKey("ListingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BoardRoom.Models.Listing", b =>
                {
                    b.Navigation("Tags");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BoardRoom.Models.Orders", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
